use crate::Bit;

pub(crate) const HAMMING84_CODEWORDS: [[Bit; 8]; 16] = [
    [0, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 1, 1, 0, 1],
    [0, 1, 0, 0, 1, 0, 1, 1],
    [1, 1, 0, 0, 0, 1, 1, 0],
    [0, 0, 1, 0, 0, 1, 1, 1],
    [1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 1, 0, 1, 1, 0, 0],
    [1, 1, 1, 0, 0, 0, 0, 1],
    [0, 0, 0, 1, 1, 1, 1, 0],
    [1, 0, 0, 1, 0, 0, 1, 1],
    [0, 1, 0, 1, 0, 1, 0, 1],
    [1, 1, 0, 1, 1, 0, 0, 0],
    [0, 0, 1, 1, 1, 0, 0, 1],
    [1, 0, 1, 1, 0, 1, 0, 0],
    [0, 1, 1, 1, 0, 0, 1, 0],
    [1, 1, 1, 1, 1, 1, 1, 1]
];

pub(crate) fn hamming84_encode(d: &[Bit]) -> [Bit; 4] {
    let mut res = [0 as Bit; 4];

    res[0] = (d[0] + d[1] + d[3]) % 2;
    res[1] = (d[0] + d[2]  + d[3]) % 2;
    res[2] = (d[1] + d[2] + d[3]) % 2;
    res[3] = (d[0] + d[1] + d[2] + d[3] + res[0] + res[1] + res[2]) % 2;

    res
}